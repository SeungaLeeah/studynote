<?xml version="1.0" encoding="UTF-8"?>
<!-- 
@filename    : professorMapper.xml
@author      : 이승아 (leeah0913@gmail.com)
@description : 교수 조회를 위한 기능 정의
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProfessorMapper">

<!-- 단일행 조회를 위한 기능 정의 -->
<select id="selectItem">
    SELECT profno, name, userid, position, sal, hiredate, comm, deptno FROM professor WHERE profno=#{profno}
</select>

<!-- 다중행 조회를 위한 기능 정의 -->
<select id="selectList">
    SELECT profno, name, userid, position, sal, hiredate, comm, deptno FROM professor

    <where>
        <if test="name != null and name != ''">
            name LIKE concat('%', #{name}, '%')
        </if>
    </where>
    ORDER BY profno DESC    

    <!-- 페이지 구현을 위한 LIMIT절 추가 -->
    <if test="listCount > 0">
        LIMIT ${offset}, ${listCount}
    </if>
    </select>
    
<!-- 교수데이터 생성 -->
<insert id="insertItem">
    INSERT INTO professor (name, userid, position, sal, hiredate, comm, deptno) VALUES (#{name}, #{userid}, #{position}, #{sal}, #{hiredate}, #{comm}, #{deptno});
</insert>

<!-- 데이터 저장을 위한 기능 정의 -->
<insert id="insertItem">
    INSERT INTO professor (name, userid, position, sal, hiredate, comm, deptno) VALUES (#{name}, #{userid}, #{position}, #{sal}, #{hiredate}, #{comm}, #{deptno});
</insert>

<!-- 데이터 삭제를 위한 기능 정의 -->
<delete id="deleteItem">
    DELETE FROM professor WHERE profno=#{profno}
</delete>

<!-- 데이터 갱신을 위한 기능 정의 -->
<update id="updateItem">
    UPDATE professor SET name=#{name}, userid=#{userid}, position=#{position}, sal=#{sal}, hiredate=#{hiredate}, comm=#{comm}, deptno=#{deptno}
    WHERE profno=#{profno};
</update>

<!-- 데이터 수 조회하기  -->
<select id="selectCountAll">
    SELECT COUNT(*) AS cnt FROM professor

    <where>
        <if test="name != null and name != ''">
            name LIKE concat('%', #{name}, '%')
        </if>
    </where>
</select>
</mapper>
